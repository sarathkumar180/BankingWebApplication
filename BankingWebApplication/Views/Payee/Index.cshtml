@using Microsoft.AspNetCore.Http
@using DAL.Enum
@using Nancy.Session
@model IList<DAL.Entities.Payee>

@{ ViewData["Title"] = "Payees"; }

<script src="~/lib/jquery/dist/jquery.min.js"  asp-fallback-src="~/lib/jquery/dist/jquery.min.js"
></script>
<script type="text/javascript">
    function EnableOrDisablePayButton() {
        //Reference the Table.
        var grid = document.getElementById("tablePayee");

        //Reference the CheckBoxes in Table.
        var checkBoxes = grid.getElementsByClassName("Selected");

        document.getElementById("btnPay").disabled = true;
        //Loop through the CheckBoxes.
        for (var i = 0; i < checkBoxes.length; i++) {
            if (checkBoxes[i].checked) {
                document.getElementById("btnPay").disabled = false;
                break;
            }
        }

        return false;
    }

    $(document).ready(function () {

        [].forEach.call(document.querySelectorAll('.Selected[type="checkbox"]'),
            function (elem) {
                elem.addEventListener('change',
                    function () {
                        if (this.checked) {
                            this.parentNode.parentNode.querySelector('.Selected[type="text"]').disabled = false;
                        } else {
                            this.parentNode.parentNode.querySelector('.Selected[type="text"]').value = "0.00";
                            this.parentNode.parentNode.querySelector('.Selected[type="text"]').disabled = true;

                        }
                        EnableOrDisablePayButton();

                    });
            });

            $("#ddlAccounts").change(function () {
                var selectedAccount = document.getElementById("ddlAccounts").value;
                if (selectedAccount != null) {
                    var hiddenFromAccounts = document.getElementsByClassName("FromAccountNo");
                    if (hiddenFromAccounts != null) {
                        for (var i = 0; i < hiddenFromAccounts.length; i++) {
                            hiddenFromAccounts[i].value = selectedAccount;
                        }
                    }
                }
            });
   });

    //function validate(parameters) {
    //    debugger;
    //    var ddlAccounts = document.getElementById("ddlAccounts").text;
    //    var selectedOption = ddlAccounts.options[ddlAccounts.selectedIndex].text;
    //    var splitOption = selectedOption.split(" ");
    //    var balanceAmount = splitOption[splitOption.length - 1];
    //    alert(balanceAmount);
    //    return false;
    //}

</script>

<h2>Transfer to Payees</h2>
<form asp-action="Index" method="post">
    @if (ViewBag != null && ViewBag.Accounts != null && ViewBag?.Accounts.Count>  0)
    {
        <p>

            <a asp-action="Payee" asp-route-customerNo="@Context.Session.GetString("CustomerNo")"
               asp-route-payeeId="0" asp-route-newPayee="true" style="font-size: medium; font-weight: bold">Add New Payee</a>
        </p>

    }
    <br/>

    @Html.Label("From Account: ")
    @Html.DropDownList("Accounts", (IEnumerable<SelectListItem>) ViewBag.Accounts, new {@class = "form-control", id = "ddlAccounts", style = "font-size: medium;font-weight: bold"})

    <br/>

    <table id="tablePayee" class="table">
        <thead>
        <tr>
            <th>
                Select to Pay
            </th>
            <th>
                PayeeName
            </th>
            <th>
                @Html.DisplayName("AccountNumber")
            </th>
            <th>
                @Html.DisplayName("BankCode")
            </th>

            <th>
                @Html.DisplayName("IsActive")
            </th>
            <th>
                Amount To Pay
            </th>
            <th>

            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>

        @for (int x = 0; x < Model.Count(); x++)
        {
            <tr>
                <td>
                    @Html.CheckBoxFor(modelItem => Model[x].IsChecked, new {@class = "Selected"})
                    @Html.HiddenFor(modelItem => Model[x].Id)
                    @Html.HiddenFor(modelItem => Model[x].PayeeAccountNumber)
                    @Html.HiddenFor(modelItem => Model[x].BankCode)
                    @Html.HiddenFor(modelItem => Model[x].PayeeName)
                    @Html.HiddenFor(modelItem => Model[x].FromAccountNo, new {@class = "FromAccountNo"})
                </td>
                <td>
                    <a asp-action="Payee" asp-route-customerNo="@Model[x].CustomerNo" asp-route-payeeId="@Model[x].Id" asp-route-newPayee="false">@Html.DisplayFor(modelItem => Model[x].PayeeName)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model[x].PayeeAccountNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model[x].BankCode)
                </td>
                <td>
                    @Html.CheckBoxFor(modelItem => Model[x].IsActive, new {@onclick = "return false"})
                </td>

                <td>
                    @Html.TextBoxFor(modelItem => Model[x].AmountToPay, "{0:n2}", new {@class = "Selected", disabled = "disabled"})
                </td>
            </tr>
        }


        </tbody>
    </table>

    @if (Model != null && Model.Any())
    {
        <div class="form-group">
            <input id="btnPay" type="submit" value="Pay" class="btn btn-default" disabled="disabled" onclick="validate();return false;"/>
        </div>
    }

</form>
